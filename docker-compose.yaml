version: "3.9"
services:
  judo_techniques_bot:
    container_name: judo_techniques_bot
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      USER_AGENT: ${USER_AGENT}
      CLIENT_ID: ${CLIENT_ID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      REDDIT_USERNAME: ${REDDIT_USERNAME}
      REDDIT_PASSWORD: ${REDDIT_PASSWORD}
      SUBREDDITS: ${SUBREDDITS}
      SENTRY_DSN: ${SENTRY_DSN}
      ENVIRONMENT: ${ENVIRONMENT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    volumes:
      - .:/app/
    stdin_open: true
    tty: true
    depends_on:
      - postgres

  postgres:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - "database-data:/var/lib/postgresql/data/" # persist data even if container shuts down

  adminer:
    image: adminer
    restart: always
    ports:
      - 9001:8080
    environment:
      ADMINER_DEFAULT_SERVER: ${DB_HOST}
    depends_on:
      - postgres
  
volumes:
  database-data: # named volumes can be managed easier using docker-compose